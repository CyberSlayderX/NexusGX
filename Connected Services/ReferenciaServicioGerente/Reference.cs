//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoNexus.ReferenciaServicioGerente {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CGerente", Namespace="http://schemas.datacontract.org/2004/07/WFC_Servicio")]
    [System.SerializableAttribute()]
    public partial class CGerente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GEREAPELLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GERECODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GEREDIRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GERENOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GERETELEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GEREAPELL {
            get {
                return this.GEREAPELLField;
            }
            set {
                if ((object.ReferenceEquals(this.GEREAPELLField, value) != true)) {
                    this.GEREAPELLField = value;
                    this.RaisePropertyChanged("GEREAPELL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GERECOD {
            get {
                return this.GERECODField;
            }
            set {
                if ((this.GERECODField.Equals(value) != true)) {
                    this.GERECODField = value;
                    this.RaisePropertyChanged("GERECOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GEREDIR {
            get {
                return this.GEREDIRField;
            }
            set {
                if ((object.ReferenceEquals(this.GEREDIRField, value) != true)) {
                    this.GEREDIRField = value;
                    this.RaisePropertyChanged("GEREDIR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GERENOM {
            get {
                return this.GERENOMField;
            }
            set {
                if ((object.ReferenceEquals(this.GERENOMField, value) != true)) {
                    this.GERENOMField = value;
                    this.RaisePropertyChanged("GERENOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GERETELE {
            get {
                return this.GERETELEField;
            }
            set {
                if ((this.GERETELEField.Equals(value) != true)) {
                    this.GERETELEField = value;
                    this.RaisePropertyChanged("GERETELE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReferenciaServicioGerente.IIServicioGerente")]
    public interface IIServicioGerente {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/DoWork", ReplyAction="http://tempuri.org/IIServicioGerente/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/DoWork", ReplyAction="http://tempuri.org/IIServicioGerente/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/Gerente", ReplyAction="http://tempuri.org/IIServicioGerente/GerenteResponse")]
        ProyectoNexus.ReferenciaServicioGerente.CGerente[] Gerente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/Gerente", ReplyAction="http://tempuri.org/IIServicioGerente/GerenteResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioGerente.CGerente[]> GerenteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/GerentePorNombre", ReplyAction="http://tempuri.org/IIServicioGerente/GerentePorNombreResponse")]
        ProyectoNexus.ReferenciaServicioGerente.CGerente[] GerentePorNombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/GerentePorNombre", ReplyAction="http://tempuri.org/IIServicioGerente/GerentePorNombreResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioGerente.CGerente[]> GerentePorNombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/GerentePorId", ReplyAction="http://tempuri.org/IIServicioGerente/GerentePorIdResponse")]
        ProyectoNexus.ReferenciaServicioGerente.CGerente GerentePorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/GerentePorId", ReplyAction="http://tempuri.org/IIServicioGerente/GerentePorIdResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioGerente.CGerente> GerentePorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/agregarGerente", ReplyAction="http://tempuri.org/IIServicioGerente/agregarGerenteResponse")]
        string agregarGerente(ProyectoNexus.ReferenciaServicioGerente.CGerente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/agregarGerente", ReplyAction="http://tempuri.org/IIServicioGerente/agregarGerenteResponse")]
        System.Threading.Tasks.Task<string> agregarGerenteAsync(ProyectoNexus.ReferenciaServicioGerente.CGerente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/actualizarGerente", ReplyAction="http://tempuri.org/IIServicioGerente/actualizarGerenteResponse")]
        string actualizarGerente(ProyectoNexus.ReferenciaServicioGerente.CGerente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/actualizarGerente", ReplyAction="http://tempuri.org/IIServicioGerente/actualizarGerenteResponse")]
        System.Threading.Tasks.Task<string> actualizarGerenteAsync(ProyectoNexus.ReferenciaServicioGerente.CGerente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/eleiminarGerente", ReplyAction="http://tempuri.org/IIServicioGerente/eleiminarGerenteResponse")]
        string eleiminarGerente(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioGerente/eleiminarGerente", ReplyAction="http://tempuri.org/IIServicioGerente/eleiminarGerenteResponse")]
        System.Threading.Tasks.Task<string> eleiminarGerenteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIServicioGerenteChannel : ProyectoNexus.ReferenciaServicioGerente.IIServicioGerente, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IServicioGerenteClient : System.ServiceModel.ClientBase<ProyectoNexus.ReferenciaServicioGerente.IIServicioGerente>, ProyectoNexus.ReferenciaServicioGerente.IIServicioGerente {
        
        public IServicioGerenteClient() {
        }
        
        public IServicioGerenteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IServicioGerenteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IServicioGerenteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IServicioGerenteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public ProyectoNexus.ReferenciaServicioGerente.CGerente[] Gerente() {
            return base.Channel.Gerente();
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioGerente.CGerente[]> GerenteAsync() {
            return base.Channel.GerenteAsync();
        }
        
        public ProyectoNexus.ReferenciaServicioGerente.CGerente[] GerentePorNombre(string nombre) {
            return base.Channel.GerentePorNombre(nombre);
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioGerente.CGerente[]> GerentePorNombreAsync(string nombre) {
            return base.Channel.GerentePorNombreAsync(nombre);
        }
        
        public ProyectoNexus.ReferenciaServicioGerente.CGerente GerentePorId(int id) {
            return base.Channel.GerentePorId(id);
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioGerente.CGerente> GerentePorIdAsync(int id) {
            return base.Channel.GerentePorIdAsync(id);
        }
        
        public string agregarGerente(ProyectoNexus.ReferenciaServicioGerente.CGerente reg) {
            return base.Channel.agregarGerente(reg);
        }
        
        public System.Threading.Tasks.Task<string> agregarGerenteAsync(ProyectoNexus.ReferenciaServicioGerente.CGerente reg) {
            return base.Channel.agregarGerenteAsync(reg);
        }
        
        public string actualizarGerente(ProyectoNexus.ReferenciaServicioGerente.CGerente reg) {
            return base.Channel.actualizarGerente(reg);
        }
        
        public System.Threading.Tasks.Task<string> actualizarGerenteAsync(ProyectoNexus.ReferenciaServicioGerente.CGerente reg) {
            return base.Channel.actualizarGerenteAsync(reg);
        }
        
        public string eleiminarGerente(int id) {
            return base.Channel.eleiminarGerente(id);
        }
        
        public System.Threading.Tasks.Task<string> eleiminarGerenteAsync(int id) {
            return base.Channel.eleiminarGerenteAsync(id);
        }
    }
}
