//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoNexus.ReferenciaServicioPedidos {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CPedidos", Namespace="http://schemas.datacontract.org/2004/07/WFC_Servicio")]
    [System.SerializableAttribute()]
    public partial class CPedidos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AGENCODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GERECODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PEDCANTIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PEDCODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PEDDESCRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PEDFECHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PEDPRECIOUNITAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PEDTOTALField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PROVCODField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AGENCOD {
            get {
                return this.AGENCODField;
            }
            set {
                if ((this.AGENCODField.Equals(value) != true)) {
                    this.AGENCODField = value;
                    this.RaisePropertyChanged("AGENCOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GERECOD {
            get {
                return this.GERECODField;
            }
            set {
                if ((this.GERECODField.Equals(value) != true)) {
                    this.GERECODField = value;
                    this.RaisePropertyChanged("GERECOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PEDCANTID {
            get {
                return this.PEDCANTIDField;
            }
            set {
                if ((this.PEDCANTIDField.Equals(value) != true)) {
                    this.PEDCANTIDField = value;
                    this.RaisePropertyChanged("PEDCANTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PEDCOD {
            get {
                return this.PEDCODField;
            }
            set {
                if ((this.PEDCODField.Equals(value) != true)) {
                    this.PEDCODField = value;
                    this.RaisePropertyChanged("PEDCOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PEDDESCR {
            get {
                return this.PEDDESCRField;
            }
            set {
                if ((object.ReferenceEquals(this.PEDDESCRField, value) != true)) {
                    this.PEDDESCRField = value;
                    this.RaisePropertyChanged("PEDDESCR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PEDFECH {
            get {
                return this.PEDFECHField;
            }
            set {
                if ((this.PEDFECHField.Equals(value) != true)) {
                    this.PEDFECHField = value;
                    this.RaisePropertyChanged("PEDFECH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PEDPRECIOUNITA {
            get {
                return this.PEDPRECIOUNITAField;
            }
            set {
                if ((this.PEDPRECIOUNITAField.Equals(value) != true)) {
                    this.PEDPRECIOUNITAField = value;
                    this.RaisePropertyChanged("PEDPRECIOUNITA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PEDTOTAL {
            get {
                return this.PEDTOTALField;
            }
            set {
                if ((this.PEDTOTALField.Equals(value) != true)) {
                    this.PEDTOTALField = value;
                    this.RaisePropertyChanged("PEDTOTAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PROVCOD {
            get {
                return this.PROVCODField;
            }
            set {
                if ((this.PROVCODField.Equals(value) != true)) {
                    this.PROVCODField = value;
                    this.RaisePropertyChanged("PROVCOD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReferenciaServicioPedidos.IIServicioPedidos")]
    public interface IIServicioPedidos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/DoWork", ReplyAction="http://tempuri.org/IIServicioPedidos/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/DoWork", ReplyAction="http://tempuri.org/IIServicioPedidos/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/Pedidos", ReplyAction="http://tempuri.org/IIServicioPedidos/PedidosResponse")]
        ProyectoNexus.ReferenciaServicioPedidos.CPedidos[] Pedidos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/Pedidos", ReplyAction="http://tempuri.org/IIServicioPedidos/PedidosResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioPedidos.CPedidos[]> PedidosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/PedidosPorNombre", ReplyAction="http://tempuri.org/IIServicioPedidos/PedidosPorNombreResponse")]
        ProyectoNexus.ReferenciaServicioPedidos.CPedidos[] PedidosPorNombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/PedidosPorNombre", ReplyAction="http://tempuri.org/IIServicioPedidos/PedidosPorNombreResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioPedidos.CPedidos[]> PedidosPorNombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/PedidosPorId", ReplyAction="http://tempuri.org/IIServicioPedidos/PedidosPorIdResponse")]
        ProyectoNexus.ReferenciaServicioPedidos.CPedidos PedidosPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/PedidosPorId", ReplyAction="http://tempuri.org/IIServicioPedidos/PedidosPorIdResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioPedidos.CPedidos> PedidosPorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/agregarPedidos", ReplyAction="http://tempuri.org/IIServicioPedidos/agregarPedidosResponse")]
        string agregarPedidos(ProyectoNexus.ReferenciaServicioPedidos.CPedidos reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/agregarPedidos", ReplyAction="http://tempuri.org/IIServicioPedidos/agregarPedidosResponse")]
        System.Threading.Tasks.Task<string> agregarPedidosAsync(ProyectoNexus.ReferenciaServicioPedidos.CPedidos reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/actualizarPedidos", ReplyAction="http://tempuri.org/IIServicioPedidos/actualizarPedidosResponse")]
        string actualizarPedidos(ProyectoNexus.ReferenciaServicioPedidos.CPedidos reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/actualizarPedidos", ReplyAction="http://tempuri.org/IIServicioPedidos/actualizarPedidosResponse")]
        System.Threading.Tasks.Task<string> actualizarPedidosAsync(ProyectoNexus.ReferenciaServicioPedidos.CPedidos reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/eliminarPedidos", ReplyAction="http://tempuri.org/IIServicioPedidos/eliminarPedidosResponse")]
        string eliminarPedidos(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioPedidos/eliminarPedidos", ReplyAction="http://tempuri.org/IIServicioPedidos/eliminarPedidosResponse")]
        System.Threading.Tasks.Task<string> eliminarPedidosAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIServicioPedidosChannel : ProyectoNexus.ReferenciaServicioPedidos.IIServicioPedidos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IServicioPedidosClient : System.ServiceModel.ClientBase<ProyectoNexus.ReferenciaServicioPedidos.IIServicioPedidos>, ProyectoNexus.ReferenciaServicioPedidos.IIServicioPedidos {
        
        public IServicioPedidosClient() {
        }
        
        public IServicioPedidosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IServicioPedidosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IServicioPedidosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IServicioPedidosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public ProyectoNexus.ReferenciaServicioPedidos.CPedidos[] Pedidos() {
            return base.Channel.Pedidos();
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioPedidos.CPedidos[]> PedidosAsync() {
            return base.Channel.PedidosAsync();
        }
        
        public ProyectoNexus.ReferenciaServicioPedidos.CPedidos[] PedidosPorNombre(string nombre) {
            return base.Channel.PedidosPorNombre(nombre);
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioPedidos.CPedidos[]> PedidosPorNombreAsync(string nombre) {
            return base.Channel.PedidosPorNombreAsync(nombre);
        }
        
        public ProyectoNexus.ReferenciaServicioPedidos.CPedidos PedidosPorId(int id) {
            return base.Channel.PedidosPorId(id);
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioPedidos.CPedidos> PedidosPorIdAsync(int id) {
            return base.Channel.PedidosPorIdAsync(id);
        }
        
        public string agregarPedidos(ProyectoNexus.ReferenciaServicioPedidos.CPedidos reg) {
            return base.Channel.agregarPedidos(reg);
        }
        
        public System.Threading.Tasks.Task<string> agregarPedidosAsync(ProyectoNexus.ReferenciaServicioPedidos.CPedidos reg) {
            return base.Channel.agregarPedidosAsync(reg);
        }
        
        public string actualizarPedidos(ProyectoNexus.ReferenciaServicioPedidos.CPedidos reg) {
            return base.Channel.actualizarPedidos(reg);
        }
        
        public System.Threading.Tasks.Task<string> actualizarPedidosAsync(ProyectoNexus.ReferenciaServicioPedidos.CPedidos reg) {
            return base.Channel.actualizarPedidosAsync(reg);
        }
        
        public string eliminarPedidos(int id) {
            return base.Channel.eliminarPedidos(id);
        }
        
        public System.Threading.Tasks.Task<string> eliminarPedidosAsync(int id) {
            return base.Channel.eliminarPedidosAsync(id);
        }
    }
}
