//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoNexus.ReferenciaServicioAuto {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CAuto", Namespace="http://schemas.datacontract.org/2004/07/WFC_Servicio")]
    [System.SerializableAttribute()]
    public partial class CAuto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AUTCANTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AUTCODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AUTMARCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AUTMODELField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AUTPRECIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GERECODField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AUTCANT {
            get {
                return this.AUTCANTField;
            }
            set {
                if ((this.AUTCANTField.Equals(value) != true)) {
                    this.AUTCANTField = value;
                    this.RaisePropertyChanged("AUTCANT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AUTCOD {
            get {
                return this.AUTCODField;
            }
            set {
                if ((this.AUTCODField.Equals(value) != true)) {
                    this.AUTCODField = value;
                    this.RaisePropertyChanged("AUTCOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AUTMARC {
            get {
                return this.AUTMARCField;
            }
            set {
                if ((object.ReferenceEquals(this.AUTMARCField, value) != true)) {
                    this.AUTMARCField = value;
                    this.RaisePropertyChanged("AUTMARC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AUTMODEL {
            get {
                return this.AUTMODELField;
            }
            set {
                if ((object.ReferenceEquals(this.AUTMODELField, value) != true)) {
                    this.AUTMODELField = value;
                    this.RaisePropertyChanged("AUTMODEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AUTPRECI {
            get {
                return this.AUTPRECIField;
            }
            set {
                if ((this.AUTPRECIField.Equals(value) != true)) {
                    this.AUTPRECIField = value;
                    this.RaisePropertyChanged("AUTPRECI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GERECOD {
            get {
                return this.GERECODField;
            }
            set {
                if ((this.GERECODField.Equals(value) != true)) {
                    this.GERECODField = value;
                    this.RaisePropertyChanged("GERECOD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReferenciaServicioAuto.IIServicioAutos")]
    public interface IIServicioAutos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/DoWork", ReplyAction="http://tempuri.org/IIServicioAutos/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/DoWork", ReplyAction="http://tempuri.org/IIServicioAutos/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/Auto", ReplyAction="http://tempuri.org/IIServicioAutos/AutoResponse")]
        ProyectoNexus.ReferenciaServicioAuto.CAuto[] Auto();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/Auto", ReplyAction="http://tempuri.org/IIServicioAutos/AutoResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioAuto.CAuto[]> AutoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/AutoPorNombre", ReplyAction="http://tempuri.org/IIServicioAutos/AutoPorNombreResponse")]
        ProyectoNexus.ReferenciaServicioAuto.CAuto[] AutoPorNombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/AutoPorNombre", ReplyAction="http://tempuri.org/IIServicioAutos/AutoPorNombreResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioAuto.CAuto[]> AutoPorNombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/AutoPorId", ReplyAction="http://tempuri.org/IIServicioAutos/AutoPorIdResponse")]
        ProyectoNexus.ReferenciaServicioAuto.CAuto AutoPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/AutoPorId", ReplyAction="http://tempuri.org/IIServicioAutos/AutoPorIdResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioAuto.CAuto> AutoPorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/agregarAuto", ReplyAction="http://tempuri.org/IIServicioAutos/agregarAutoResponse")]
        string agregarAuto(ProyectoNexus.ReferenciaServicioAuto.CAuto reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/agregarAuto", ReplyAction="http://tempuri.org/IIServicioAutos/agregarAutoResponse")]
        System.Threading.Tasks.Task<string> agregarAutoAsync(ProyectoNexus.ReferenciaServicioAuto.CAuto reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/actualizarAuto", ReplyAction="http://tempuri.org/IIServicioAutos/actualizarAutoResponse")]
        string actualizarAuto(ProyectoNexus.ReferenciaServicioAuto.CAuto reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/actualizarAuto", ReplyAction="http://tempuri.org/IIServicioAutos/actualizarAutoResponse")]
        System.Threading.Tasks.Task<string> actualizarAutoAsync(ProyectoNexus.ReferenciaServicioAuto.CAuto reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/eliminarAuto", ReplyAction="http://tempuri.org/IIServicioAutos/eliminarAutoResponse")]
        string eliminarAuto(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAutos/eliminarAuto", ReplyAction="http://tempuri.org/IIServicioAutos/eliminarAutoResponse")]
        System.Threading.Tasks.Task<string> eliminarAutoAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIServicioAutosChannel : ProyectoNexus.ReferenciaServicioAuto.IIServicioAutos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IServicioAutosClient : System.ServiceModel.ClientBase<ProyectoNexus.ReferenciaServicioAuto.IIServicioAutos>, ProyectoNexus.ReferenciaServicioAuto.IIServicioAutos {
        
        public IServicioAutosClient() {
        }
        
        public IServicioAutosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IServicioAutosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IServicioAutosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IServicioAutosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public ProyectoNexus.ReferenciaServicioAuto.CAuto[] Auto() {
            return base.Channel.Auto();
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioAuto.CAuto[]> AutoAsync() {
            return base.Channel.AutoAsync();
        }
        
        public ProyectoNexus.ReferenciaServicioAuto.CAuto[] AutoPorNombre(string nombre) {
            return base.Channel.AutoPorNombre(nombre);
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioAuto.CAuto[]> AutoPorNombreAsync(string nombre) {
            return base.Channel.AutoPorNombreAsync(nombre);
        }
        
        public ProyectoNexus.ReferenciaServicioAuto.CAuto AutoPorId(int id) {
            return base.Channel.AutoPorId(id);
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioAuto.CAuto> AutoPorIdAsync(int id) {
            return base.Channel.AutoPorIdAsync(id);
        }
        
        public string agregarAuto(ProyectoNexus.ReferenciaServicioAuto.CAuto reg) {
            return base.Channel.agregarAuto(reg);
        }
        
        public System.Threading.Tasks.Task<string> agregarAutoAsync(ProyectoNexus.ReferenciaServicioAuto.CAuto reg) {
            return base.Channel.agregarAutoAsync(reg);
        }
        
        public string actualizarAuto(ProyectoNexus.ReferenciaServicioAuto.CAuto reg) {
            return base.Channel.actualizarAuto(reg);
        }
        
        public System.Threading.Tasks.Task<string> actualizarAutoAsync(ProyectoNexus.ReferenciaServicioAuto.CAuto reg) {
            return base.Channel.actualizarAutoAsync(reg);
        }
        
        public string eliminarAuto(int id) {
            return base.Channel.eliminarAuto(id);
        }
        
        public System.Threading.Tasks.Task<string> eliminarAutoAsync(int id) {
            return base.Channel.eliminarAutoAsync(id);
        }
    }
}
