//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoNexus.ReferenciaServicioProveedores {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CProveedores", Namespace="http://schemas.datacontract.org/2004/07/WFC_Servicio")]
    [System.SerializableAttribute()]
    public partial class CProveedores : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GERECODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PROVAPELLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PROVCODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PROVDIRECCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PROVNOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PROV_TELEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GERECOD {
            get {
                return this.GERECODField;
            }
            set {
                if ((this.GERECODField.Equals(value) != true)) {
                    this.GERECODField = value;
                    this.RaisePropertyChanged("GERECOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROVAPELL {
            get {
                return this.PROVAPELLField;
            }
            set {
                if ((object.ReferenceEquals(this.PROVAPELLField, value) != true)) {
                    this.PROVAPELLField = value;
                    this.RaisePropertyChanged("PROVAPELL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PROVCOD {
            get {
                return this.PROVCODField;
            }
            set {
                if ((this.PROVCODField.Equals(value) != true)) {
                    this.PROVCODField = value;
                    this.RaisePropertyChanged("PROVCOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROVDIRECC {
            get {
                return this.PROVDIRECCField;
            }
            set {
                if ((object.ReferenceEquals(this.PROVDIRECCField, value) != true)) {
                    this.PROVDIRECCField = value;
                    this.RaisePropertyChanged("PROVDIRECC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROVNOM {
            get {
                return this.PROVNOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PROVNOMField, value) != true)) {
                    this.PROVNOMField = value;
                    this.RaisePropertyChanged("PROVNOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PROV_TELE {
            get {
                return this.PROV_TELEField;
            }
            set {
                if ((this.PROV_TELEField.Equals(value) != true)) {
                    this.PROV_TELEField = value;
                    this.RaisePropertyChanged("PROV_TELE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReferenciaServicioProveedores.IIServicioProveedores")]
    public interface IIServicioProveedores {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/DoWork", ReplyAction="http://tempuri.org/IIServicioProveedores/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/DoWork", ReplyAction="http://tempuri.org/IIServicioProveedores/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/Proveedores", ReplyAction="http://tempuri.org/IIServicioProveedores/ProveedoresResponse")]
        ProyectoNexus.ReferenciaServicioProveedores.CProveedores[] Proveedores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/Proveedores", ReplyAction="http://tempuri.org/IIServicioProveedores/ProveedoresResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioProveedores.CProveedores[]> ProveedoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/PorveedoresPorNombre", ReplyAction="http://tempuri.org/IIServicioProveedores/PorveedoresPorNombreResponse")]
        ProyectoNexus.ReferenciaServicioProveedores.CProveedores[] PorveedoresPorNombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/PorveedoresPorNombre", ReplyAction="http://tempuri.org/IIServicioProveedores/PorveedoresPorNombreResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioProveedores.CProveedores[]> PorveedoresPorNombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/ProveedorPorId", ReplyAction="http://tempuri.org/IIServicioProveedores/ProveedorPorIdResponse")]
        ProyectoNexus.ReferenciaServicioProveedores.CProveedores ProveedorPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/ProveedorPorId", ReplyAction="http://tempuri.org/IIServicioProveedores/ProveedorPorIdResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioProveedores.CProveedores> ProveedorPorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/agregarPorveedor", ReplyAction="http://tempuri.org/IIServicioProveedores/agregarPorveedorResponse")]
        string agregarPorveedor(ProyectoNexus.ReferenciaServicioProveedores.CProveedores reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/agregarPorveedor", ReplyAction="http://tempuri.org/IIServicioProveedores/agregarPorveedorResponse")]
        System.Threading.Tasks.Task<string> agregarPorveedorAsync(ProyectoNexus.ReferenciaServicioProveedores.CProveedores reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/actualizarProveedor", ReplyAction="http://tempuri.org/IIServicioProveedores/actualizarProveedorResponse")]
        string actualizarProveedor(ProyectoNexus.ReferenciaServicioProveedores.CProveedores reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/actualizarProveedor", ReplyAction="http://tempuri.org/IIServicioProveedores/actualizarProveedorResponse")]
        System.Threading.Tasks.Task<string> actualizarProveedorAsync(ProyectoNexus.ReferenciaServicioProveedores.CProveedores reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/eliminarPorveedor", ReplyAction="http://tempuri.org/IIServicioProveedores/eliminarPorveedorResponse")]
        string eliminarPorveedor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioProveedores/eliminarPorveedor", ReplyAction="http://tempuri.org/IIServicioProveedores/eliminarPorveedorResponse")]
        System.Threading.Tasks.Task<string> eliminarPorveedorAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIServicioProveedoresChannel : ProyectoNexus.ReferenciaServicioProveedores.IIServicioProveedores, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IServicioProveedoresClient : System.ServiceModel.ClientBase<ProyectoNexus.ReferenciaServicioProveedores.IIServicioProveedores>, ProyectoNexus.ReferenciaServicioProveedores.IIServicioProveedores {
        
        public IServicioProveedoresClient() {
        }
        
        public IServicioProveedoresClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IServicioProveedoresClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IServicioProveedoresClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IServicioProveedoresClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public ProyectoNexus.ReferenciaServicioProveedores.CProveedores[] Proveedores() {
            return base.Channel.Proveedores();
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioProveedores.CProveedores[]> ProveedoresAsync() {
            return base.Channel.ProveedoresAsync();
        }
        
        public ProyectoNexus.ReferenciaServicioProveedores.CProveedores[] PorveedoresPorNombre(string nombre) {
            return base.Channel.PorveedoresPorNombre(nombre);
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioProveedores.CProveedores[]> PorveedoresPorNombreAsync(string nombre) {
            return base.Channel.PorveedoresPorNombreAsync(nombre);
        }
        
        public ProyectoNexus.ReferenciaServicioProveedores.CProveedores ProveedorPorId(int id) {
            return base.Channel.ProveedorPorId(id);
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ReferenciaServicioProveedores.CProveedores> ProveedorPorIdAsync(int id) {
            return base.Channel.ProveedorPorIdAsync(id);
        }
        
        public string agregarPorveedor(ProyectoNexus.ReferenciaServicioProveedores.CProveedores reg) {
            return base.Channel.agregarPorveedor(reg);
        }
        
        public System.Threading.Tasks.Task<string> agregarPorveedorAsync(ProyectoNexus.ReferenciaServicioProveedores.CProveedores reg) {
            return base.Channel.agregarPorveedorAsync(reg);
        }
        
        public string actualizarProveedor(ProyectoNexus.ReferenciaServicioProveedores.CProveedores reg) {
            return base.Channel.actualizarProveedor(reg);
        }
        
        public System.Threading.Tasks.Task<string> actualizarProveedorAsync(ProyectoNexus.ReferenciaServicioProveedores.CProveedores reg) {
            return base.Channel.actualizarProveedorAsync(reg);
        }
        
        public string eliminarPorveedor(int id) {
            return base.Channel.eliminarPorveedor(id);
        }
        
        public System.Threading.Tasks.Task<string> eliminarPorveedorAsync(int id) {
            return base.Channel.eliminarPorveedorAsync(id);
        }
    }
}
