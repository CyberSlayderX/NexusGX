//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoNexus.ServicioAgente {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CAgente", Namespace="http://schemas.datacontract.org/2004/07/WFC_Servicio")]
    [System.SerializableAttribute()]
    public partial class CAgente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGENAPELLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AGENCODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGENDIRECField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGENNOMBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AGENTELEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GERECODField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGENAPELL {
            get {
                return this.AGENAPELLField;
            }
            set {
                if ((object.ReferenceEquals(this.AGENAPELLField, value) != true)) {
                    this.AGENAPELLField = value;
                    this.RaisePropertyChanged("AGENAPELL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AGENCOD {
            get {
                return this.AGENCODField;
            }
            set {
                if ((this.AGENCODField.Equals(value) != true)) {
                    this.AGENCODField = value;
                    this.RaisePropertyChanged("AGENCOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGENDIREC {
            get {
                return this.AGENDIRECField;
            }
            set {
                if ((object.ReferenceEquals(this.AGENDIRECField, value) != true)) {
                    this.AGENDIRECField = value;
                    this.RaisePropertyChanged("AGENDIREC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGENNOMB {
            get {
                return this.AGENNOMBField;
            }
            set {
                if ((object.ReferenceEquals(this.AGENNOMBField, value) != true)) {
                    this.AGENNOMBField = value;
                    this.RaisePropertyChanged("AGENNOMB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AGENTELE {
            get {
                return this.AGENTELEField;
            }
            set {
                if ((this.AGENTELEField.Equals(value) != true)) {
                    this.AGENTELEField = value;
                    this.RaisePropertyChanged("AGENTELE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GERECOD {
            get {
                return this.GERECODField;
            }
            set {
                if ((this.GERECODField.Equals(value) != true)) {
                    this.GERECODField = value;
                    this.RaisePropertyChanged("GERECOD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioAgente.IIServicioAgente")]
    public interface IIServicioAgente {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/DoWork", ReplyAction="http://tempuri.org/IIServicioAgente/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/DoWork", ReplyAction="http://tempuri.org/IIServicioAgente/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/Agente", ReplyAction="http://tempuri.org/IIServicioAgente/AgenteResponse")]
        ProyectoNexus.ServicioAgente.CAgente[] Agente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/Agente", ReplyAction="http://tempuri.org/IIServicioAgente/AgenteResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ServicioAgente.CAgente[]> AgenteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/AgentePorNombre", ReplyAction="http://tempuri.org/IIServicioAgente/AgentePorNombreResponse")]
        ProyectoNexus.ServicioAgente.CAgente[] AgentePorNombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/AgentePorNombre", ReplyAction="http://tempuri.org/IIServicioAgente/AgentePorNombreResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ServicioAgente.CAgente[]> AgentePorNombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/AgentePorId", ReplyAction="http://tempuri.org/IIServicioAgente/AgentePorIdResponse")]
        ProyectoNexus.ServicioAgente.CAgente AgentePorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/AgentePorId", ReplyAction="http://tempuri.org/IIServicioAgente/AgentePorIdResponse")]
        System.Threading.Tasks.Task<ProyectoNexus.ServicioAgente.CAgente> AgentePorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/agregarAgente", ReplyAction="http://tempuri.org/IIServicioAgente/agregarAgenteResponse")]
        string agregarAgente(ProyectoNexus.ServicioAgente.CAgente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/agregarAgente", ReplyAction="http://tempuri.org/IIServicioAgente/agregarAgenteResponse")]
        System.Threading.Tasks.Task<string> agregarAgenteAsync(ProyectoNexus.ServicioAgente.CAgente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/actualizarAgente", ReplyAction="http://tempuri.org/IIServicioAgente/actualizarAgenteResponse")]
        string actualizarAgente(ProyectoNexus.ServicioAgente.CAgente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/actualizarAgente", ReplyAction="http://tempuri.org/IIServicioAgente/actualizarAgenteResponse")]
        System.Threading.Tasks.Task<string> actualizarAgenteAsync(ProyectoNexus.ServicioAgente.CAgente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/eliminarAgente", ReplyAction="http://tempuri.org/IIServicioAgente/eliminarAgenteResponse")]
        string eliminarAgente(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIServicioAgente/eliminarAgente", ReplyAction="http://tempuri.org/IIServicioAgente/eliminarAgenteResponse")]
        System.Threading.Tasks.Task<string> eliminarAgenteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIServicioAgenteChannel : ProyectoNexus.ServicioAgente.IIServicioAgente, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IServicioAgenteClient : System.ServiceModel.ClientBase<ProyectoNexus.ServicioAgente.IIServicioAgente>, ProyectoNexus.ServicioAgente.IIServicioAgente {
        
        public IServicioAgenteClient() {
        }
        
        public IServicioAgenteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IServicioAgenteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IServicioAgenteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IServicioAgenteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public ProyectoNexus.ServicioAgente.CAgente[] Agente() {
            return base.Channel.Agente();
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ServicioAgente.CAgente[]> AgenteAsync() {
            return base.Channel.AgenteAsync();
        }
        
        public ProyectoNexus.ServicioAgente.CAgente[] AgentePorNombre(string nombre) {
            return base.Channel.AgentePorNombre(nombre);
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ServicioAgente.CAgente[]> AgentePorNombreAsync(string nombre) {
            return base.Channel.AgentePorNombreAsync(nombre);
        }
        
        public ProyectoNexus.ServicioAgente.CAgente AgentePorId(int id) {
            return base.Channel.AgentePorId(id);
        }
        
        public System.Threading.Tasks.Task<ProyectoNexus.ServicioAgente.CAgente> AgentePorIdAsync(int id) {
            return base.Channel.AgentePorIdAsync(id);
        }
        
        public string agregarAgente(ProyectoNexus.ServicioAgente.CAgente reg) {
            return base.Channel.agregarAgente(reg);
        }
        
        public System.Threading.Tasks.Task<string> agregarAgenteAsync(ProyectoNexus.ServicioAgente.CAgente reg) {
            return base.Channel.agregarAgenteAsync(reg);
        }
        
        public string actualizarAgente(ProyectoNexus.ServicioAgente.CAgente reg) {
            return base.Channel.actualizarAgente(reg);
        }
        
        public System.Threading.Tasks.Task<string> actualizarAgenteAsync(ProyectoNexus.ServicioAgente.CAgente reg) {
            return base.Channel.actualizarAgenteAsync(reg);
        }
        
        public string eliminarAgente(int id) {
            return base.Channel.eliminarAgente(id);
        }
        
        public System.Threading.Tasks.Task<string> eliminarAgenteAsync(int id) {
            return base.Channel.eliminarAgenteAsync(id);
        }
    }
}
